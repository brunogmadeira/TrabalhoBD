/*Para criar uma função que insira os dados na tabela OP, incluindo o cálculo de valor_final a partir da tabela FICHA_TECNICA, conforme relacionado na tabela PRODUTOS, você pode usar o seguinte código SQL:*/

CREATE OR REPLACE FUNCTION inserir_dados_op(
    p_id_produto INT,
    p_status VARCHAR(50),
    p_quantidade_a_produzir INT,
    p_data_inicio TIMESTAMP
) 
RETURNS VOID AS $$
DECLARE
    v_id_ficha INT;
    v_custo_total DECIMAL(10,2);
    v_tempo_preparo INTERVAL;
    v_data_conclusao TIMESTAMP;
BEGIN
    -- Obter o id_ficha da tabela PRODUTOS
    SELECT id_ficha INTO v_id_ficha FROM PRODUTOS WHERE id_produto = p_id_produto;
    
    -- Obter o custo_total e tempo_preparo da tabela FICHA_TECNICA
    SELECT custo_total, tempo_preparo INTO v_custo_total, v_tempo_preparo FROM FICHA_TECNICA WHERE id_ficha = v_id_ficha;
    
    -- Calcular a data de conclusão
    v_data_conclusao := p_data_inicio + INTERVAL '1 day' + (v_tempo_preparo * p_quantidade_a_produzir);
    
    -- Inserir os dados na tabela OP
    INSERT INTO OP (
        id_produto, status, quantidade_a_produzir, data_inicio, data_conclusao, valor_final, data_de_criacao, data_de_atualizacao
    )
    VALUES (
        p_id_produto, p_status, p_quantidade_a_produzir, p_data_inicio, v_data_conclusao, v_custo_total, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP
    );
END;
$$ LANGUAGE plpgsql;



/*2. Função para obter os detalhes de uma ficha técnica baseada no produto
Esta função retorna os detalhes da ficha técnica de um produto específico.*/

CREATE OR REPLACE FUNCTION obter_ficha_tecnica_produto(produto_id INT)
RETURNS TABLE(
    nome VARCHAR,
    descricao TEXT,
    tempo_preparo INTERVAL,
    servicos_utilizados VARCHAR(50),
    custo_total DECIMAL(10, 2),
    id_massa INT,
    id_recheio INT,
    id_decoracao INT
) AS $$
BEGIN
    RETURN QUERY
    SELECT
        f.nome, f.descricao, f.tempo_preparo, f.servicos_utilizados, f.custo_total,
        f.id_massa, f.id_recheio, f.id_decoracao
    FROM FICHA_TECNICA f
    JOIN PRODUTOS p ON p.id_ficha = f.id_ficha
    WHERE p.id_produto = produto_id;
END;
$$ LANGUAGE plpgsql;

/*uma função que atualize a coluna status da tabela OP para 'Conclusão atrasada' quando a data_conclusao passar*/

CREATE OR REPLACE FUNCTION atualizar_status_conclusao_atrasada() 
RETURNS VOID AS $$
BEGIN
    -- Atualizar o status para 'Conclusão atrasada' onde a data_conclusao já passou e o status ainda não é 'Concluído'
    UPDATE OP
    SET status = 'Conclusão atrasada'
    WHERE data_conclusao < CURRENT_TIMESTAMP AND status != 'Concluído';
END;
$$ LANGUAGE plpgsql;

/* Função da trigger para atualizar a coluna data_de_atualizacao*/
CREATE OR REPLACE FUNCTION atualizar_data_atualizacao()
RETURNS TRIGGER AS $$
BEGIN
    NEW.data_de_atualizacao = CURRENT_TIMESTAMP;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;